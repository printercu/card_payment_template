doctype html
html
  head
    / ВНИМАНИЕ! Перед отправкой на проверку из файлов необходимо удалить
    / все комментарии, весь код для отладки (console.log, и т.д.),
    / а также все неиспользуемые блоки кода
    / Slim не рендерит комментарии, начинающиеся с /, их можно не удалять.
    /
    / При написании шаблона сохроаняем все условные позиции (блоков /-- --),
    / и имена маркеров ({{...}})
    meta content='text/html; charset=utf-8' http-equiv='Content-Type'
    meta name='viewport' content='width=device-width, initial-scale=1.0, user-scalable=no'

    title= t('title')

    / Здесь сохраняем адресацию до файла. www файл назван, чтобы было понятно,
    / что его надо положить в www вашего домена. чтобы пути правильно работали
    link href='css/jquery-ui.css' rel='stylesheet' type='text/css'
    script src='js/jquery.js' type='text/javascript'
    script src='js/jquery-ui.js' type='text/javascript'
    script src='js/js.js' type='text/javascript'
    link href='css/card_payment_form.css' rel='stylesheet' type='text/css'
    script src='js/jquery.card_payment_form.js' type='text/javascript'

    / Здесь ваши собственные стили и скрипты.
    / Все ваши файлы должны находиться только в папке {{merchant_id}}
    link rel='stylesheet' type='text/css' href=css_path('your_css.css')
    / JavaScript запрещен для использования в ваших шаблонах.
    / Все что необходимо кастомизировать в JavaScript шаблона,
    / необходимо закладывать в замыкания при инициализаци card_payment_form плагина.

    javascript:
      $(document).ready(function() {
        function _console_log() {
          #{{'console.log.apply(console, arguments);' unless release?}}
        }

        var card_inputs = $('[name^="card_num"]');
        card_inputs.focus(function(e) {
          for (var i = 0; i < card_inputs.length; i += 1) {
            var input = card_inputs[i];
            if (input == e.target) return;
            if (input.value.length < 4) {
              input.focus();
              return;
            }
          }
        });

        $('div#card_input_form').card_payment_form({

          // Тип инициализируемой формы
          'form_type' : 'card_form',

          // Здесь так и оставляем, используется, для определения принимаемых типов карт
          'accepted_card_brands' : #{{release? ? "['{{accepted_card_brands}}']" : "['VISA','MASTERCARD']"}},
          'ok_seter': {
            form : function (data, text, forms, fields, validators, settings, ok_setter, error_setter, nothing_setter) {
              _console_log('from: status ok');
              data['info_form'].removeClass('field-error').addClass('field-ok');
              fields.message.text('');
              forms.show_form.apply( this , [ID_INFO_FORM]);
            },
            'card_num_fields' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {
              _console_log('card_num_fields: status ok');
              fields.card_num_fields.each(function(i) {
                $(this).removeClass('field-error').addClass('field-ok');
              });
            },
            'card_num' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {
              _console_log('card_num: status ok');
              fields.card_num.addClass('field-ok').removeClass('field-error');
            },

            // Используются выставления состояния в полях, когда они правильно заполены
            //
            // card_num_fields - В форме, где несколько полей для ввода номера карты, для полей под ввод номера
            // card_num - В форме, где одно поле для ввода номера карты, для полей под ввод номера
            // exp_date_fields - В форме, где несколько полей для ввода даны истечения срока действия карты, для полей под ввод даты
            // exp_date - В форме, где одно поле для ввода даны истечения срока действия карты, для полей под ввод даты
            // name_on_card - Поле для ввода имени карты
            // card_cvc - Поле для ввода cvc/cvv2
            //
            // 'exp_date_fields' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // 'exp_date' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // 'name_on_card' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // 'card_cvc' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {}
          },
          'error_seter': {
            'form' : function (data, text, forms, fields, validators, settings, ok_seter, error_seter, nothing_seter) {
              _console_log('from: status error');
              alert(#{{t('form_config_error').to_json}});
              data['info_form'].addClass('field-error').removeClass('field-ok');
              fields.message.text(text);
              forms.show_form.apply( this , [ID_INFO_FORM]);
            },
            'card_num_fields' : function (fields, validators, settings, ok_setter, error_setter, nothing_setter) {
              _console_log('card_num_fields: status error');
              fields.card_num_fields.each(function(i) {
                $(this).removeClass('field-ok').addClass('field-error');
              });
            },
            'card_num' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {
              _console_log('card_num: status error');
              alert(#{{t('card_number_error').to_json}});
              fields.card_num.removeClass('field-ok').addClass('field-error');
            },

            // Используются выставления состояния в полях, когда они не правильно заполены
            //
            // form - ошибки самой формы
            // card_num_fields - В форме, где несколько полей для ввода номера карты, для полей под ввод номера
            // card_num - В форме, где одно поле для ввода номера карты, для полей под ввод номера
            // exp_date_fields - В форме, где несколько полей для ввода даны истечения срока действия карты, для полей под ввод даты
            // exp_date - В форме, где одно поле для ввода даны истечения срока действия карты, для полей под ввод даты
            // name_on_card - Поле для ввода имени карты
            // card_cvc - Поле для ввода cvc/cvv2
            //
            // exp_date_fields : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // exp_date : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // name_on_card : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // card_cvc : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {}
          },
          'nothing_seter' : {
            'form' : function (data, text, forms, fields, validators, settings, ok_setter, error_setter, nothing_setter) {
              _console_log('from: status nothing');
              data['info_form'].removeClass('field-error').removeClass('field-ok');
              fields.message.text('');
              forms.show_form.apply( this , [ID_INFO_FORM]);
            },
            'card_num_fields' : function (fields, validators, settings, ok_setter, error_setter, nothing_setter) {
              _console_log('card_num_fields: status nothing');
              fields.card_num_fields.each(function(i) {
                $(this).removeClass('field-ok').removeClass('field-error');
              });
            },
            'card_num' : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {
              _console_log('card_num: status nothing');
              fields.card_num.removeClass('field-ok').removeClass('field-error');
            },

            // Используются выставления состояния в полях, когда они не заполнены
            //
            // card_num_fields - В форме, где несколько полей для ввода номера карты, для полей под ввод номера
            // card_num - В форме, где одно поле для ввода номера карты, для полей под ввод номера
            // exp_date_fields - В форме, где несколько полей для ввода даны истечения срока действия карты, для полей под ввод даты
            // exp_date - В форме, где одно поле для ввода даны истечения срока действия карты, для полей под ввод даты
            // name_on_card - Поле для ввода имени карты
            // card_cvc - Поле для ввода cvc/cvv2
            //
            // exp_date : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // name_on_card : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // card_cvc : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {}
          },
          'handlers' : {
            'card_num_fields': function(fields, validators, settings, ok_setter, error_setter, nothing_setter) {
              this.value = this.value.replace(/[^0-9]/g, '');

              var cardNum = '';
              fields.card_num_fields.each(function(i) {
                cardNum += $(this).val();
              });

              if(cardNum.length >= settings.min_card_number_length && cardNum.length <= settings.max_card_number_length)
                if(validators.card_num( cardNum , settings)) ok_setter.card_num_fields.apply(this, [fields, validators, settings, ok_setter, error_setter, nothing_setter]);
                else error_setter.card_num_fields.apply(this, [fields, validators, settings, ok_setter, error_setter, nothing_setter]);
              else nothing_setter.card_num_fields.apply(this, [fields, validators, settings, ok_setter, error_setter, nothing_setter]);
            },
            'card_num': function(fields, validators, settings, ok_setter, error_setter, nothing_setter) {
              var value = this.value = this.value.replace(/[^0-9 -]/g, '');

              if(value.length >= settings.min_card_number_length && value.length <= settings.max_card_number_length)
                if(validators.card_num( value , settings)) ok_setter.card_num.apply(this, [fields, validators, settings, ok_setter, error_setter, nothing_setter]);
                else error_setter.card_num.apply(this, [fields, validators, settings, ok_setter, error_setter, nothing_setter]);
              else
                nothing_setter.card_num.apply(this, [fields, validators, settings, ok_setter, error_setter, nothing_setter]);
            },

            // Срабатывают по событию keyip
            //
            // card_num_fields - В форме, где несколько полей для ввода номера карты, для полей под ввод номера
            // card_num - В форме, где одно поле для ввода номера карты, для полей под ввод номера
            // exp_date_fields - В форме, где несколько полей для ввода даны истечения срока действия карты, для полей под ввод даты
            // exp_date - В форме, где одно поле для ввода даны истечения срока действия карты, для полей под ввод даты
            // name_on_card - Поле для ввода имени карты
            // card_cvc - Поле для ввода cvc/cvv2
            //
            // exp_date_fields : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // exp_date : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // name_on_card : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // card_cvc : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {}
          },
          'validators' : {
            'card_num': function( cardNumber, settings) {
              // accept only spaces, digits and dashes
              if (/[^0-9 -]+/.test(cardNumber))
                return false;

              cardNumber = cardNumber.replace(/\D/g, '');
              if(cardNumber.length < settings.min_card_number_length || cardNumber.length >  settings.max_card_number_length)
                return false;

              return true;
            },

            // Валидаторы данных полей
            //
            // card_num - В форме, где одно поле для ввода номера карты, для полей под ввод номера
            // exp_date - В форме, где одно поле для ввода даны истечения срока действия карты, для полей под ввод даты
            // name_on_card - Поле для ввода имени карты
            // card_cvc - Поле для ввода cvc/cvv2
            //
            // exp_date_fields : function (fields, validators, settings, ok_seter, error_seter, nothing_seter) {},
            // exp_date : function (strExpDate, settings) {},
            // name_on_card : function (strNameOnCard, settings) {},
            // card_cvc : function (strCardCvc, settings) {}
          },
        });
      });
  <body {{_onload}}>
    .navbar.navbar-inverse.navbar-static-top: .container-fluid
      .navbar-brand: a href='/'
        img src=image_path('cafebike_logo.svg')
      ul.nav.nav-header.navbar-nav.pull-left
        li: a.close href='javascript:history.back()' &times;

    .flex-expandable.bg-blue: .container: .row: .col-center
      /-- --
      h1= t('header')
      #card_input_form
        form method='POST'
          p
            | {{description}}
          <!--WITHOUT_GDS_ONLY-->
          p
            = t('bill_amount')
            | : {{amount_to_pay}} {{currency}}
          <!--/WITHOUT_GDS_ONLY-->

          <!--_error-->
          .alert.alert-danger
            | {{_error}}
          <!--/_error-->
          p= t('form_caption')
          .well.well-card
            .form-group.row
              label.col-xs-4 for='card_num_1' = t('card_number')
              - (1..4).each do |i|
                - max_length = i == 4 ? 7 : 4 # Last input is larger
                input.form-control.col-xs-2(id="card_num_#{i}" name="card_num_#{i}"
                  autocomplete="off" maxlength=max_length type="text" placeholder='0000')
            .form-group.row
              label.col-xs-4 for='exp_month' = t('exp_date')
              input.form-control.col-xs-2(type='text' name='exp_month'
                autocomplete="off" maxlength=2 placeholder=(t('month_placeholder') * 2))
              input.form-control.col-xs-2(type='text' name='exp_year'
                autocomplete="off" maxlength=2 placeholder=(t('year_placeholder') * 2))
              label.col-xs-2.text-center for='card_cvc' CVV
              input.form-control.col-xs-2(name='card_cvc' type='text' maxlength=3
                autocomplete="off" placeholder="---")
              / value='{{card_cvc}}'
            .form-group.row
              label.col-xs-4 for='name_on_card' = t('cardholder')
              input.form-control.col-xs-8(name='name_on_card' type='text'
                placeholder=t('cardholder_placeholder'))
          .form-group
            button.btn.btn-primary.form-control type='submit' = t('pay')
          p.text-center= t('payment_description')
    .bg-blue.padding-top: .container: .row: .col-center
      .row: .col-xs-4.col-xs-offset-4
        img.img-responsive src=image_path('platron.png')
      p.text-center.small= t('disclaimer')
  </body>
